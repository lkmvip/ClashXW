name: Build

on:
  push:
    tags: [ '**' ]

jobs:
  build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
        fetch-depth: 0
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1
    - uses: nuget/setup-nuget@v1
      with:
        nuget-version: latest
    - uses: actions/setup-python@v3
      with:
        python-version: 3.7
    - run: |
        cd translate
        pip install -r requirements.txt
        ./gen_rc.sh
      shell: bash
    - run: |
        mkdir .nuget
        cd .nuget
        curl -OL https://github.com/ysc3839/GitInfo/releases/download/v2.0.33/GitInfo.2.0.33.nupkg
        nuget sources add -name gitinfo -source `cygpath -wa .`
        cd ..
        nuget restore ClashXW.sln
      shell: bash
    - run: |
        vcpkg install skyr-url --triplet=arm64-windows-static
        vcpkg install skyr-url --triplet=x64-windows-static
        vcpkg install skyr-url --triplet=x86-windows-static
        vcpkg integrate install
      shell: cmd
    - run: |
        Start-Job -Init ([ScriptBlock]::Create("Set-Location '$pwd'")) -Script {
          msbuild ClashXW.sln "-p:Configuration=Release;Platform=x64" }
        Start-Job -Init ([ScriptBlock]::Create("Set-Location '$pwd'")) -Script {
          msbuild ClashXW.sln "-p:Configuration=Release;Platform=x86" }
        Start-Job -Init ([ScriptBlock]::Create("Set-Location '$pwd'")) -Script {
          msbuild ClashXW.sln "-p:Configuration=Release;Platform=ARM64" }
        Get-Job | Wait-Job | Receive-Job
      shell: powershell
    - uses: actions/upload-artifact@v2
      with:
        name: ClashXW64
        path: x64/Release/ClashXW64.exe
        if-no-files-found: error
    - uses: actions/upload-artifact@v2
      with:
        name: ClashXW64
        path: x64/Release/ClashXW64.pdb
        if-no-files-found: error
    - uses: actions/upload-artifact@v2
      with:
        name: ClashXW32
        path: Release/ClashXW32.exe
        if-no-files-found: error
    - uses: actions/upload-artifact@v2
      with:
        name: ClashXW32
        path: Release/ClashXW32.pdb
        if-no-files-found: error
    - uses: actions/upload-artifact@v2
      with:
        name: ClashXWARM64
        path: ARM64/Release/ClashXWARM64.exe
        if-no-files-found: error
    - uses: actions/upload-artifact@v2
      with:
        name: ClashXWARM64
        path: ARM64/Release/ClashXWARM64.pdb
        if-no-files-found: error
    - run: sh create_package.sh
      shell: bash
    - name: Get git tag version
      id: git_tag_version
      run: echo "::set-output name=version::$(git describe --tags)"
      shell: bash
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}
        draft: true
        prerelease: false
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: pkg/64.zip
        asset_name: ClashXW64-${{ steps.git_tag_version.outputs.version }}.zip
        asset_content_type: application/octet-stream
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: pkg/32.zip
        asset_name: ClashXW32-${{ steps.git_tag_version.outputs.version }}.zip
        asset_content_type: application/octet-stream
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: pkg/ARM64.zip
        asset_name: ClashXWARM64-${{ steps.git_tag_version.outputs.version }}.zip
        asset_content_type: application/octet-stream
